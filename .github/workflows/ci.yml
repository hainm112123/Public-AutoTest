name: Automation testing CI
on:
  push:
    branches: [dev, master]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  LANGSMITH_TRACING: ${{ secrets.LANGSMITH_TRACING }}
  LANGSMITH_ENDPOINT: ${{ secrets.LANGSMITH_ENDPOINT }}
  LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
  LANGSMITH_PROJECT: ${{ secrets.LANGSMITH_PROJECT }}
  GCP_KEY: ${{ secrets.GCP_KEY }}

jobs:

  # ..................................................performance test.......................................................
  performance-only:
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        runner: [
          ubuntu-latest, 
          windows-latest, 
          macos-latest,
        ]
 
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: hainm112123/Automation-Testing
          ref: dev
          token: ${{ secrets.GHP }}
      - uses: ./.github/actions/setup-python
        with:
          NAME: ${{matrix.runner}}     
          OS: ${{runner.os}} 
      
      - if: ${{!startsWith(matrix.runner, 'ubi')}}
        run: playwright install --with-deps
      - if: ${{startsWith(matrix.runner, 'ubi')}}
        run: playwright install
      
      - uses: ./.github/actions/run-test
        with:
          NAME: ${{matrix.runner}} 
          TEST: performance
      
      - uses: ./.github/actions/report
        if: always()
        with:
          NAME: performance-${{matrix.runner}}

  # ..................................................stability test.......................................................
  stability:
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        runner: [
          ubuntu-latest, 
          windows-latest, 
          macos-latest,
        ]
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: hainm112123/Automation-Testing
          ref: dev
          token: ${{ secrets.GHP }}
      - uses: ./.github/actions/setup-python
        with:
          NAME: ${{matrix.runner}}     
          OS: ${{runner.os}}  

      - if: ${{!startsWith(matrix.runner, 'ubi')}}
        run: playwright install --with-deps
      - if: ${{startsWith(matrix.runner, 'ubi')}}
        run: playwright install

      - uses: ./.github/actions/run-test
        with:
          NAME: ${{matrix.runner}} 
          TEST: stability

      - uses: ./.github/actions/report
        if: always()
        with:
          NAME: stability-${{matrix.runner}}

  # ..................................................faul injection test.......................................................
  
  fault-injection:
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        runner: [
          ubuntu-latest, 
          windows-latest, 
          macos-latest,
        ]
 
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: hainm112123/Automation-Testing
          ref: dev
          token: ${{ secrets.GHP }}
      - uses: ./.github/actions/setup-python
        with:
          NAME: ${{matrix.runner}}
          OS: ${{runner.os}}   

      - if: ${{runner.os == 'Linux' && !startsWith(matrix.runner, 'ubi')}}
        run: |
          sudo apt update
          sudo apt install -y stress-ng
      - if: ${{startsWith(matrix.runner, 'ubi')}}
        run: |
          sudo dnf makecache
          sudo dnf install -y --nogpgcheck stress-ng
      - if: runner.os == 'Windows'
        uses: ./.github/actions/setup-win-stress
      - if: runner.os == 'macOS' 
        run: brew install stress-ng
      
      - uses: ./.github/actions/run-test
        with:
          NAME: ${{matrix.runner}} 
          TEST: fault
      
      - uses: ./.github/actions/report
        if: always()
        with:
          NAME: fault-${{matrix.runner}}
  # ..................................................idle test.......................................................
  idle:
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        runner: [
          ubuntu-latest, 
          windows-latest, 
          macos-latest,
        ]
 
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: hainm112123/Automation-Testing
          ref: dev
          token: ${{ secrets.GHP }}
      - uses: ./.github/actions/setup-python
        with:
          NAME: ${{matrix.runner}}
          OS: ${{runner.os}}
      
      - uses: ./.github/actions/run-test
        with:
          NAME: ${{matrix.runner}} 
          TEST: idle
      
      - uses: ./.github/actions/report
        if: always()
        with:
          NAME: idle-${{matrix.runner}}
