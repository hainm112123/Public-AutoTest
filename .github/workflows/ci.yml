name: Automation testing CI
on:
  push:
    branches: [dev, master]

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  LANGSMITH_TRACING: ${{ secrets.LANGSMITH_TRACING }}
  LANGSMITH_ENDPOINT: ${{ secrets.LANGSMITH_ENDPOINT }}
  LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
  LANGSMITH_PROJECT: ${{ secrets.LANGSMITH_PROJECT }}
  GCP_KEY: ${{ secrets.GCP_KEY }}

jobs:

  # ..................................................performance test.......................................................
  performance-only:
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        runner:
          - [ubuntu-latest]
          - [windows-latest]
          - [macos-latest]
          # - [self-hosted, Linux]
 
    steps:
      - uses: actions/checkout@v4
        with: 
          repository: hainm112123/Automation-Testing
          ref: dev
          path: automation-testing
          token: ${{ secrets.GHP }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'   
      - run: |
          pip install -r requirements.txt  
          playwright install --with-deps
      
      - run: python tests/performance.py
      
      - uses: ./.github/actions/report
        with:
          LOG: performance-logs-${{join(matrix.runner, '-')}}
          REPORT: performance-reports-${{join(matrix.runner, '-')}}

  # ..................................................stability test.......................................................
  stability:
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        runner:
          - [ubuntu-latest]
          - [windows-latest]
          - [macos-latest]
          # - [self-hosted, Linux]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'   
      - run: |
          pip install -r requirements.txt  
          playwright install --with-deps

      - run: python tests/stability.py

      - uses: ./.github/actions/report
        with:
          LOG: stability-logs-${{join(matrix.runner, '-')}}
          REPORT: stability-reports-${{join(matrix.runner, '-')}}

  # ..................................................correctness test.......................................................
  # correctness:
  #   runs-on: [self-hosted, Linux]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/setup-art
  #     - uses: actions/setup-python@v5
  #       with: 
  #         python-version: '3.13'
  #     - run: pip install -r requirements.txt

  #     - run: python tests/correctness.py
      
  #     - uses: ./.github/actions/report
  #       with:
  #         LOG: correctness-logs-${{runner.os}}-${{runner.environment}}-${{runner.name}}
  #         REPORT: correctness-reports-${{runner.os}}-${{runner.environment}}-${{runner.name}}
  
  fault-injection:
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        runner:
          - [ubuntu-latest]
          - [windows-latest]
          - [macos-latest]
          # - [self-hosted, Linux]
 
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'   
      - run: pip install -r requirements.txt
      - if: runner.os == 'Linux' 
        run: |
          sudo apt update
          sudo apt install -y stress-ng
      - if: runner.os == 'Windows'
        uses: ./.github/actions/setup-win-stress
      - if: runner.os == 'macOS' 
        run: brew install stress-ng
      
      - run: python tests/fault.py
      
      - uses: ./.github/actions/report
        with:
          LOG: fault-logs-${{join(matrix.runner, '-')}}
          REPORT: fault-reports-${{join(matrix.runner, '-')}}